{"version":3,"sources":["../src/sails.ts"],"names":[],"mappings":"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","file":"sails.js","sourceRoot":"","sourcesContent":["import SailsIO from \"sails.io.js\";\nimport * as SocketIO from \"socket.io-client\";\nimport { SailsResponse } from \"./sails.response\";\nimport { SailsConfig } from \"./sails.config\";\nimport { Inject, InjectionToken, Injector } from \"@angular/core\";\nimport { SailsIOClient } from \"./sails.io.client\";\nimport { SailsInterceptorConstructor, SailsInterceptorInterface } from \"./sails.interceptor\";\nimport { SailsInterceptorHandler, SailsInterceptorHandlerInterface } from \"./sails.interceptor.handler\";\nimport { SailsOptions } from \"./sails.options\";\nimport { isString } from \"./utils\";\nimport { SailsRequestOptions } from \"./sails.request.options\";\nimport { SailsEvent } from \"./sails.event\";\nimport { Observable } from \"rxjs/Observable\";\n\nexport const SAILS_OPTIONS = new InjectionToken(\"SAILS_OPTIONS\");\nexport const SAILS_INTERCEPTORS = new InjectionToken(\"SAILS_INTERCEPTORS\");\n\nexport const SailsEnvironment = {\n    DEV: \"development\",\n    PROD: \"production\"\n};\n\nexport const SailsListener = {\n    ERROR: \"error\",\n    CONNECT: \"connect\",\n    RECONNECT: \"reconnect\",\n    CONNECTING: \"connecting\",\n    DISCONNECT: \"disconnect\",\n    RECONNECTING: \"reconnecting\",\n    CONNECT_ERROR: \"connect_error\",\n    CONNECT_TIMEOUT: \"connect_timeout\",\n};\n\nexport class Sails implements SailsInterceptorInterface, SailsInterceptorHandlerInterface {\n    private Socket: SailsIOClient.Socket;\n    private Config: SailsConfig;\n    private Listeners: { [eventName: string]: ((data: any) => void)[] } = {\n        [SailsListener.CONNECT]: [],\n        [SailsListener.CONNECT_ERROR]: [],\n        [SailsListener.CONNECT_TIMEOUT]: [],\n        [SailsListener.CONNECTING]: [],\n        [SailsListener.RECONNECT]: [],\n        [SailsListener.RECONNECTING]: [],\n        [SailsListener.DISCONNECT]: [],\n        [SailsListener.ERROR]: [],\n    };\n\n    private get socket(): SailsIOClient.Socket {\n        return this.Socket;\n    }\n\n    private set socket(Socket: SailsIOClient.Socket) {\n        this.Socket = Socket;\n    }\n\n    constructor(\n         private injector: Injector,\n         options: SailsOptions,\n         private Interceptors: SailsInterceptorConstructor[] = []) {\n\n        const io: SailsIOClient.IO = SailsIO(SocketIO);\n        const socket = io.socket;\n\n        // Helper function for Listeners\n        const handleListeners = eventName => data => {\n            this.Listeners[eventName].forEach(callback => callback(data));\n        };\n        // Set up Event Listeners\n        socket.on(SailsListener.CONNECT, handleListeners(SailsListener.CONNECT));\n        socket.on(SailsListener.CONNECT_ERROR, handleListeners(SailsListener.CONNECT_ERROR));\n        socket.on(SailsListener.CONNECT_TIMEOUT, handleListeners(SailsListener.CONNECT_TIMEOUT));\n        socket.on(SailsListener.CONNECTING, handleListeners(SailsListener.CONNECTING));\n        socket.on(SailsListener.RECONNECT, handleListeners(SailsListener.RECONNECT));\n        socket.on(SailsListener.ERROR, handleListeners(SailsListener.ERROR));\n        socket.on(SailsListener.RECONNECTING, handleListeners(SailsListener.RECONNECTING));\n        socket.on(SailsListener.DISCONNECT, handleListeners(SailsListener.DISCONNECT));\n\n        // Setup Config\n        const Config = new SailsConfig(options);\n        // Merge Config with Sails\n        Object.assign(io.sails, Config);\n\n        this.socket = socket;\n        this.Config = Config;\n    }\n\n    public connect(): Sails {\n        if (!this.connected()) {\n            this.socket._connect();\n        }\n\n        return this;\n    }\n\n    public connected(): boolean {\n        return this.socket.isConnected();\n    }\n\n    public isConnecting(): Sails {\n        this.socket.isConnecting();\n        return this;\n    }\n\n    public disconnect(): Sails {\n        if (this.connected()) {\n            this.socket.disconnect();\n        }\n        return this;\n    }\n\n    public addEventListener(eventName: string, callback: (data: string) => void): this {\n        if (!this.Listeners[eventName]) {\n            throw new Error(`The event [${eventName}] has not yet been supported by this library.`);\n        }\n        this.Listeners[eventName].push(callback);\n        return this;\n    }\n\n    public removeEventListener(eventName: string, callback): this {\n        if (!this.Listeners[eventName]) {\n            throw new Error(`The event [${eventName}] has not yet been supported by this library.`);\n        }\n        if (this.Listeners[eventName].indexOf(callback) > -1) {\n            this.Listeners[eventName].splice(this.Listeners[eventName].indexOf(callback), 1);\n        }\n        return this;\n    }\n\n    public on(eventName: string): Observable<SailsEvent> {\n        return new Observable((obs) => {\n            this.socket.on(eventName, response => {\n                if (response) {\n                    const event = new SailsEvent(response);\n                    obs.next(event);\n                    this.debugReqRes(eventName, event);\n                }\n            });\n            return () => this.socket.off(eventName, () => { });\n        });\n    }\n\n    public off(eventName: string): Observable<SailsEvent> {\n        return new Observable((obs) => {\n            this.socket.off(eventName, response => {\n                if (response) {\n                    const event = new SailsEvent(response);\n                    obs.next(event);\n                    this.debugReqRes(eventName, event);\n                }\n                return () => { };\n            });\n        });\n    }\n\n    public request(request: SailsRequestOptions): Observable<SailsResponse> {\n        const req = request.clone({\n            url: this.Config.prefix + request.url,\n        });\n\n        return this.intercept(req);\n    }\n\n    intercept(request: SailsRequestOptions, next: SailsInterceptorHandlerInterface = this): Observable<SailsResponse> {\n        const handler = this.Interceptors.reduceRight((next: SailsInterceptorHandlerInterface, interceptor) => {\n            return new SailsInterceptorHandler(next, this.injector.get(interceptor));\n        }, next);\n\n        return handler.handle(request);\n    }\n\n    handle(request: SailsRequestOptions): Observable<SailsResponse> {\n        return new Observable<SailsResponse>((obs) => {\n            this.socket.request(request.serialize(), (body: any, jwr: SailsIOClient.JWR.Response) => {\n                const response = new SailsResponse(jwr);\n                if (response.isError()) {\n                    obs.error(response.getError());\n                } else {\n                    obs.next(response.getBody());\n                }\n\n                obs.complete();\n                this.debugReqRes(request, response);\n            });\n        });\n    }\n\n    private debugReqRes(request, response) {\n        if (this.Config.environment === SailsEnvironment.DEV) {\n            console.groupCollapsed(\"[SailsSocketIO] > Debug Output\");\n            isString(request) ? console.log(request) : console.dir(request);\n            console.dir(response);\n            console.groupEnd();\n        }\n    }\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, decorators: [{ type: Inject, args: [Injector, ] }, ]},\n{type: undefined, decorators: [{ type: Inject, args: [SAILS_OPTIONS, ] }, ]},\n{type: Array, decorators: [{ type: Inject, args: [SAILS_INTERCEPTORS, ] }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}