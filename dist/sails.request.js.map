{"version":3,"file":"sails.request.js","sourceRoot":"","sources":["../src/sails.request.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAC;AAG9D;IACI,sBAAoB,KAAkB;QAAlB,sBAAA,EAAA,UAAkB;QAAlB,UAAK,GAAL,KAAK,CAAa;IAAI,CAAC;IAE3C,6BAAM,GAAN,UAAO,QAAgB;QACnB,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YAC9B,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACnB,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC;aACrB;YACD,IAAI,CAAC,KAAK,IAAI,QAAQ,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,+BAAQ,GAAR;QACI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YAC5C,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;SACjC;QACD,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IACL,mBAAC;AAAD,CAAC,AAnBD,IAmBC;AAED,MAAM,CAAC,IAAM,MAAM,GAAG;IAClB,GAAG,EAAE,KAAK;IACV,IAAI,EAAE,MAAM;IACZ,GAAG,EAAE,KAAK;IACV,MAAM,EAAE,QAAQ;IAChB,KAAK,EAAE,OAAO;CACjB,CAAC;AAEF;IAGI,sBAAoB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;QAFxB,eAAU,GAAa,EAAE,CAAC;IAEE,CAAC;IAE9B,0BAAG,GAAV,UAAW,GAAW,EAAE,OAA+B;QACnD,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;IACnD,CAAC;IAEM,2BAAI,GAAX,UAAY,GAAW,EAAE,MAAc,EAAE,OAA+B;QACpE,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IAEM,0BAAG,GAAV,UAAW,GAAW,EAAE,MAAc,EAAE,OAA+B;QACnE,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IAC3D,CAAC;IAEM,6BAAM,GAAb,UAAc,GAAW,EAAE,OAA+B;QACtD,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;IACtD,CAAC;IAEM,4BAAK,GAAZ,UAAa,GAAW,EAAE,OAA+B;QACrD,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;IACrD,CAAC;IAEO,+BAAQ,GAAhB,UAAiB,MAAc,EAAE,GAAW,EAAE,MAAe,EAAE,OAA+B;QAC1F,IAAM,OAAO,GAAG,IAAI,mBAAmB,CAAC,EAAE,MAAM,QAAA,EAAE,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,MAAM,QAAA,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;QAChG,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IAEM,+BAAQ,GAAf,UAAgB,IAAY,EAAE,KAAyD;QACnF,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE;YACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAI,IAAI,SAAI,KAAO,CAAC,CAAC;SAC5C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,gCAAS,GAAjB;QACI,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC;IAEO,iCAAU,GAAlB,UAAmB,GAAW;QAC1B,OAAO,GAAG,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACpD,CAAC;IACL,mBAAC;AAAD,CAAC,AA5CD,IA4CC","sourcesContent":["import { Sails } from \"./sails\";\nimport { SailsResponse } from \"./sails.response\";\nimport { SailsIOClient } from \"./sails.io.client\";\nimport { SailsRequestOptions } from \"./sails.request.options\";\nimport { Observable } from \"rxjs\";\n\nclass QueryBuilder {\n    constructor(private query: string = \"\") { }\n\n    append(criteria: string) {\n        if (typeof criteria === \"string\") {\n            if (this.query.length) {\n                this.query += \"&\";\n            }\n            this.query += criteria;\n        }\n        return this;\n    }\n\n    toString() {\n        if (this.query && this.query.charAt(0) !== \"?\") {\n            this.query = \"?\" + this.query;\n        }\n        return this.query;\n    }\n}\n\nexport const Method = {\n    GET: \"get\",\n    POST: \"post\",\n    PUT: \"put\",\n    DELETE: \"delete\",\n    PATCH: \"patch\",\n};\n\nexport class SailsRequest {\n    private parameters: string[] = [];\n\n    constructor(private sails: Sails) { }\n\n    public get(url: string, headers?: SailsIOClient.Headers) {\n        return this._request(Method.GET, url, headers);\n    }\n\n    public post(url: string, params: object, headers?: SailsIOClient.Headers) {\n        return this._request(Method.POST, url, params, headers);\n    }\n\n    public put(url: string, params: object, headers?: SailsIOClient.Headers) {\n        return this._request(Method.PUT, url, params, headers);\n    }\n\n    public delete(url: string, headers?: SailsIOClient.Headers) {\n        return this._request(Method.DELETE, url, headers);\n    }\n\n    public patch(url: string, headers?: SailsIOClient.Headers) {\n        return this._request(Method.PATCH, url, headers);\n    }\n\n    private _request(method: string, url: string, params?: Object, headers?: SailsIOClient.Headers): Observable<SailsResponse> {\n        const request = new SailsRequestOptions({ method, url: this.buildQuery(url), params, headers });\n        return this.sails.request(request);\n    }\n\n    public addParam(name: string, value: boolean | number | string | { toString(): string }): this {\n        if (value.toString().length) {\n            this.parameters.push(`${name}=${value}`);\n        }\n        return this;\n    }\n\n    private getParams(): string {\n        return this.parameters.join(\"&\");\n    }\n\n    private buildQuery(url: string): string {\n        return url + new QueryBuilder(this.getParams());\n    }\n}\n"]}