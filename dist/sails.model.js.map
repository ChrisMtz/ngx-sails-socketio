{"version":3,"sources":["../src/sails.model.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAE1D,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AAGnC,IAAsB,UAAU;IADhC;QAEgB,OAAE,GAAW,EAAE,CAAC;IAkDhC,CAAC;IA9CG,gCAAW,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;IAEM,oBAAS,GAAhB,UAAgD,KAAQ;QACpD,IAAM,IAAI,GAAG,UAAC,GAAG;YACb,GAAG,CAAC,CAAC,IAAM,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;gBACpB,IAAM,IAAI,GAAM,GAAG,CAAC,GAAG,CAAC,CAAC;gBACzB,qBAAqB;gBACrB,EAAE,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,OAAO,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;oBAC9C,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;gBACpB,CAAC;gBAED,sDAAsD;gBACtD,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,YAAY,YAAU,IAAI,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC;oBACzD,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;gBACvB,CAAC;gBAED,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,YAAY,YAAU,CAAC,CAAC,CAAC;oBACrC,GAAG,CAAC,GAAG,CAAC,GAAG,YAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAC1C,CAAC;gBAED,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,YAAY,KAAK,CAAC,CAAC,CAAC;oBAChC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAA,EAAE;wBAClB,EAAE,CAAC,CAAC,EAAE,YAAY,YAAU,CAAC,CAAC,CAAC;4BAC3B,MAAM,CAAC,YAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;wBACpC,CAAC;wBAED,MAAM,CAAC,EAAE,CAAC;oBACd,CAAC,CAAC,CAAC;gBACP,CAAC;YACL,CAAC;YACD,MAAM,CAAC,GAAG,CAAC;QACf,CAAC,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;IAC1C,CAAC;IAEM,sBAAW,GAAlB,UAAkD,UAAU,EAAE,IAAa;QACvE,IAAM,MAAM,GAAG,UAAC,KAAK,IAAK,OAAA,WAAW,CAAI,UAAU,EAAE,KAAK,CAAM,EAAtC,CAAsC,CAAC;QACjE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC5B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,4GAA4G,CAAC,CAAC;IAClI,CAAC;IACL,iBAAC;AAAD,CAnDA,AAmDC,IAAA;AAlDe;IAAX,QAAQ,EAAE;;sCAAiB;AACF;IAAzB,QAAQ,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;8BAAY,IAAI;6CAAC;AAChB;IAAzB,QAAQ,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;8BAAY,IAAI;6CAAC;AAHxB,UAAU;IAD/B,QAAQ,EAAE;GACW,UAAU,CAmD/B;SAnDqB,UAAU","file":"sails.model.js","sourceRoot":"","sourcesContent":["import { Property, unserialize } from \"./sails.serialize\";\nimport { SailsModelInterface } from \"./sails.model.interface\";\nimport { Endpoint } from \"./sails.decorator.endpoint\";\nimport { isObject } from \"./utils\";\n\n@Endpoint()\nexport abstract class SailsModel implements SailsModelInterface {\n    @Property() id: string = \"\";\n    @Property({ type: Date }) createdAt: Date;\n    @Property({ type: Date }) updatedAt: Date;\n\n    getEndPoint(): string {\n        return this.getEndPoint();\n    }\n\n    static serialize<U extends SailsModelInterface>(model: U): U {\n        const recr = (obj) => {\n            for (const key in obj) {\n                const prop: U = obj[key];\n                // Ignore NULL values\n                if (prop === null || typeof prop === \"function\") {\n                    delete obj[key];\n                }\n\n                // Convert Property Models to their ID representations\n                if (prop && prop instanceof SailsModel && prop.id !== null) {\n                    obj[key] = prop.id;\n                }\n\n                if (prop && prop instanceof SailsModel) {\n                    obj[key] = SailsModel.serialize(prop);\n                }\n\n                if (prop && prop instanceof Array) {\n                    obj[key] = prop.map(ob => {\n                        if (ob instanceof SailsModel) {\n                            return SailsModel.serialize(ob);\n                        }\n\n                        return ob;\n                    });\n                }\n            }\n            return obj;\n        };\n        return recr(Object.assign({}, model));\n    }\n\n    static unserialize<U extends SailsModelInterface>(modelClazz, data: U | U[]): U | U[] {\n        const callFn = (model) => unserialize<U>(modelClazz, model) as U;\n        if (Array.isArray(data)) {\n            return data.map(callFn);\n        } else if (isObject(data)) {\n            return callFn(data);\n        }\n        throw new Error(\"SailsModel.unserialize requires a data parameter of either a Literal Object or an Array of Literal Objects\");\n    }\n}"]}